<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>indi.cloud</groupId>
	<artifactId>oauth-center</artifactId>
	<version>3.0.0</version>
	<name>oauth-center</name>
	<description>认证中心</description>

	<properties>
		<java.version>1.8</java.version>
		<kotlin.version>1.2.71</kotlin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--<security-jwt.version>1.0.9.RELEASE</security-jwt.version>-->
        <jjwt.version>0.9.0</jjwt.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
	</properties>

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
			<version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.47</version>
        </dependency>
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!--代码生成器依赖-->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!--MySQL JDBC驱动-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.47</version>
		</dependency>

		<!-- 启用热部署 -->
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-devtools</artifactId>-->
			<!--&lt;!&ndash; optional=true, 依赖不会传递, 该项目依赖devtools;-->
                <!--之后依赖boot项目的项目如果想要使用devtools, 需要重新引入 &ndash;&gt;-->
			<!--<optional>true</optional>-->
		<!--</dependency>-->
	</dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<build>
		<plugins>

			<!-- 打包跳过test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- spring Boot在编译的时候, 是有默认JDK版本的, 这里自定义指定JDK版本 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!--瘦版jar包-->
			<plugin>
				<!-- maven-jar-plugin用于生成META-INF/MANIFEST.MF文件的部分内容， -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- true: 会在MANIFEST.MF加上Class-Path项并配置依赖包 -->
							<addClasspath>true</addClasspath>
							<!-- 指定依赖包所在目录。 -->
							<classpathPrefix>../libs/</classpathPrefix>
							<!-- 指定MANIFEST.MF中的Main-Class， -->
							<mainClass>indi.cloud.oauth.center.Application</mainClass>

							<!-- 如果不加这一句则依赖的SNAPSHOT的jar包就会表现为MANIFEST.MF中的
                Class-Path: lib/facede-user-1.0-20160512.093945-1.jar
                但是打包到../lib/facede-user-1.0-SNAPSHOT.jar下面包,这样就会出现找不到类的情况 -->
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
					</archive>

					<!--打maven仓库jar包时排除-->
					<excludes>
						<!--注意该目录从编译结果目录开始算目录结构-->
						<exclude>*.yml</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!--拷贝依赖jar到指定的目录-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>../../libs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!--<build>-->
		<!--<plugins>-->
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.jetbrains.kotlin</groupId>-->
				<!--<artifactId>kotlin-maven-plugin</artifactId>-->
				<!--<version>${kotlin.version}</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>compile</id>-->
						<!--<phase>compile</phase>-->
						<!--<goals>-->
							<!--<goal>compile</goal>-->
						<!--</goals>-->
					<!--</execution>-->
					<!--<execution>-->
						<!--<id>test-compile</id>-->
						<!--<phase>test-compile</phase>-->
						<!--<goals>-->
							<!--<goal>test-compile</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--<jvmTarget>1.8</jvmTarget>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-compiler-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>compile</id>-->
						<!--<phase>compile</phase>-->
						<!--<goals>-->
							<!--<goal>compile</goal>-->
						<!--</goals>-->
					<!--</execution>-->
					<!--<execution>-->
						<!--<id>testCompile</id>-->
						<!--<phase>test-compile</phase>-->
						<!--<goals>-->
							<!--<goal>testCompile</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		<!--</plugins>-->
	<!--</build>-->

</project>
